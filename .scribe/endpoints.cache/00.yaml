## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Autenticación y Gestión de Usuarios'
description: |-

  APIs para gestionar autenticación, registro y perfil de usuarios
endpoints:
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: 'Autenticación y Gestión de Usuarios'
      groupDescription: |-

        APIs para gestionar autenticación, registro y perfil de usuarios
      subgroup: ''
      subgroupDescription: ''
      title: 'Registro de usuario'
      description: |-
        Registra un nuevo usuario en el sistema y envía un código de verificación al correo electrónico.
        Por defecto, todo usuario nuevo es registrado con rol 'cliente'.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Nombre del usuario.'
        required: true
        example: 'Juan Pérez'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      apellido:
        name: apellido
        description: 'nullable Apellido del usuario.'
        required: false
        example: González
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      email:
        name: email
        description: 'Email del usuario (debe ser único).'
        required: true
        example: usuario@ejemplo.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'Contraseña del usuario (mínimo 8 caracteres).'
        required: true
        example: Password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      telefono:
        name: telefono
        description: 'nullable Número telefónico del usuario.'
        required: false
        example: '+504 9999-9999'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      name: 'Juan Pérez'
      apellido: González
      email: usuario@ejemplo.com
      password: Password123
      telefono: '+504 9999-9999'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
             "message": "Usuario registrado exitosamente",
             "user": {
                 "id": 1,
                 "name": "Juan Pérez",
                 "apellido": "González",
                 "email": "usuario@ejemplo.com",
                 "telefono": "+504 9999-9999",
                 "rol": "cliente",
                 "fecha_registro": "2025-04-02T10:30:00.000000Z",
                 "updated_at": "2025-04-02T10:30:00.000000Z",
                 "created_at": "2025-04-02T10:30:00.000000Z"
             },
             "token": "1|abcdefghijklmnopqrstuvwxyz"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
             "message": "The given data was invalid.",
             "errors": {
                 "email": ["El correo electrónico ya ha sido registrado."]
             }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: 'Autenticación y Gestión de Usuarios'
      groupDescription: |-

        APIs para gestionar autenticación, registro y perfil de usuarios
      subgroup: ''
      subgroupDescription: ''
      title: 'Login de usuario'
      description: |-
        Autentica a un usuario con su email y contraseña.
        Actualiza la fecha de última conexión del usuario.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Email del usuario.'
        required: true
        example: usuario@ejemplo.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'Contraseña del usuario.'
        required: true
        example: Password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: usuario@ejemplo.com
      password: Password123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "Inicio de sesión exitoso",
             "user": {
                 "id": 1,
                 "name": "Juan Pérez",
                 "apellido": "González",
                 "email": "usuario@ejemplo.com",
                 "telefono": "+504 9999-9999",
                 "rol": "cliente",
                 "ultima_conexion": "2025-04-02T11:45:00.000000Z"
             },
             "token": "1|abcdefghijklmnopqrstuvwxyz"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
             "message": "The given data was invalid.",
             "errors": {
                 "email": ["Las credenciales proporcionadas son incorrectas."]
             }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/verificar-codigo
    metadata:
      groupName: 'Autenticación y Gestión de Usuarios'
      groupDescription: |-

        APIs para gestionar autenticación, registro y perfil de usuarios
      subgroup: ''
      subgroupDescription: ''
      title: 'Verificar código'
      description: 'Verifica el código enviado al correo electrónico del usuario durante el registro.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Email del usuario.'
        required: true
        example: usuario@ejemplo.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      codigo:
        name: codigo
        description: 'Código de verificación recibido por email.'
        required: true
        example: '123456'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: usuario@ejemplo.com
      codigo: '123456'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "Correo verificado exitosamente",
             "user": {
                 "id": 1,
                 "name": "Juan Pérez",
                 "email": "usuario@ejemplo.com",
                 "email_verified_at": "2025-04-02T11:50:00.000000Z"
             }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "message": "No se encontró usuario con ese correo"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
             "message": "Código de verificación inválido"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/reenviar-codigo
    metadata:
      groupName: 'Autenticación y Gestión de Usuarios'
      groupDescription: |-

        APIs para gestionar autenticación, registro y perfil de usuarios
      subgroup: ''
      subgroupDescription: ''
      title: 'Reenviar código de verificación'
      description: 'Reenvía el código de verificación al correo electrónico del usuario.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Email del usuario.'
        required: true
        example: usuario@ejemplo.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: usuario@ejemplo.com
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "Código reenviado exitosamente"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "message": "No se encontró usuario con ese correo"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/recuperar-password
    metadata:
      groupName: 'Autenticación y Gestión de Usuarios'
      groupDescription: |-

        APIs para gestionar autenticación, registro y perfil de usuarios
      subgroup: ''
      subgroupDescription: ''
      title: 'Reenviar código de verificación'
      description: 'Reenvía el código de verificación al correo electrónico del usuario.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Email del usuario.'
        required: true
        example: usuario@ejemplo.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: usuario@ejemplo.com
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "Código reenviado exitosamente"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
             "message": "No se encontró usuario con ese correo"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/cambiar-password
    metadata:
      groupName: 'Autenticación y Gestión de Usuarios'
      groupDescription: |-

        APIs para gestionar autenticación, registro y perfil de usuarios
      subgroup: ''
      subgroupDescription: ''
      title: 'Cambiar contraseña con código'
      description: 'Cambia la contraseña del usuario utilizando el código de recuperación enviado por email.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Email del usuario.'
        required: true
        example: usuario@ejemplo.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      codigo:
        name: codigo
        description: 'Código de recuperación recibido por email.'
        required: true
        example: '123456'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'Nueva contraseña (mínimo 8 caracteres).'
        required: true
        example: NuevaPassword123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Confirmación de la nueva contraseña.'
        required: true
        example: NuevaPassword123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: usuario@ejemplo.com
      codigo: '123456'
      password: NuevaPassword123
      password_confirmation: NuevaPassword123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "Contraseña actualizada exitosamente"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
             "message": "Código inválido"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: 'Autenticación y Gestión de Usuarios'
      groupDescription: |-

        APIs para gestionar autenticación, registro y perfil de usuarios
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtener perfil de usuario'
      description: 'Obtiene la información del perfil del usuario autenticado.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {SCRIBE_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "user": {
                 "id": 1,
                 "name": "Juan Pérez",
                 "apellido": "González",
                 "email": "usuario@ejemplo.com",
                 "telefono": "+504 9999-9999",
                 "rol": "cliente",
                 "foto_perfil": "perfiles/usuario1.jpg",
                 "fecha_registro": "2025-04-01T10:30:00.000000Z",
                 "ultima_conexion": "2025-04-02T11:45:00.000000Z"
             }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user/update
    metadata:
      groupName: 'Autenticación y Gestión de Usuarios'
      groupDescription: |-

        APIs para gestionar autenticación, registro y perfil de usuarios
      subgroup: ''
      subgroupDescription: ''
      title: 'Actualizar perfil de usuario'
      description: 'Actualiza la información del perfil del usuario autenticado.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {SCRIBE_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'sometimes Nombre del usuario.'
        required: false
        example: 'Juan Carlos'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      apellido:
        name: apellido
        description: 'nullable Apellido del usuario.'
        required: false
        example: 'Pérez González'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      telefono:
        name: telefono
        description: 'nullable Número telefónico del usuario.'
        required: false
        example: '+504 8888-8888'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      foto_perfil:
        name: foto_perfil
        description: 'nullable Foto de perfil (jpeg,png,jpg máx: 2MB).'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Juan Carlos'
      apellido: 'Pérez González'
      telefono: '+504 8888-8888'
    fileParameters:
      foto_perfil: null
    responses:
      -
        status: 200
        content: |-
          {
             "message": "Perfil actualizado exitosamente",
             "user": {
                 "id": 1,
                 "name": "Juan Carlos",
                 "apellido": "Pérez González",
                 "email": "usuario@ejemplo.com",
                 "telefono": "+504 8888-8888",
                 "foto_perfil": "perfiles/usuario1_actualizado.jpg"
             }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: 'Autenticación y Gestión de Usuarios'
      groupDescription: |-

        APIs para gestionar autenticación, registro y perfil de usuarios
      subgroup: ''
      subgroupDescription: ''
      title: 'Cerrar sesión'
      description: 'Cierra la sesión del usuario eliminando el token de acceso actual.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {SCRIBE_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "Sesión cerrada exitosamente"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
